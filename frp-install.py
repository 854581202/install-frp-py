from tkinter  import *
import  os
import time
import tkinter.messagebox
class app:
    def __init__(self,root):
            frame1 = Frame(root)
            frame2 = Frame(root)
            frame3 = Frame(root)
            frame4 = Frame(root)
            frame5 = Frame(root)
            #frame6 = Frame(root)
            root.title("FRP客户端安装器V0.1")
            root.geometry('300x200')
            self.download = Button(frame1,text="下载FRP",fg = "white" , command = self.appdownload)
            self.download.pack()
            self.config = Button(frame2,text="配置FRP",fg = "white" , command = self.appconfig)
            self.config.pack()
            self.status = Button(frame3,text="查看FRP状态",fg = "white" , command = self.appstatus)
            self.status.pack()
            self.start = Button(frame4,text="启动FRP",fg = "white" , command = self.appstart)
            self.start.pack()
            self.stop = Button(frame5,text="停止FRP",fg = "white" , command = self.appstop)
            self.stop.pack()
            #self.restart = Button(frame6,text="重启FRP",fg = "white" , command = self.apprestart)
            #self.restart.pack()
            self.label = Label(root,text="制作人:mr.funky \n QQ:708863861")
            self.label.pack()
            frame1.pack()
            frame2.pack()
            frame3.pack()
            frame4.pack()
            frame5.pack()
    def appdownload(self):
        osRadioDia = os.popen('python3 RadioDia.py')
        select = int(osRadioDia.read())
        info = Toplevel()
        info.title("提示")
        infoLabel = Message(info,text="下载成功!",padx = 70 )
        infoLabel.pack()
        result = os.system("sudo bash ./shell/download.sh %s " % select )
        #result=os.popen("ps -aux | grep download.sh | grep -v grep |awk ''")
        result=os.system("sudo bash ./shell/config.sh")
        if result == 0:
            info = Toplevel()
            info.title("提示")
            infoLabel = Message(info,text="配置文件初始化成功!" , padx = 70 ).pack()
    def appconfig(self):
            def save():
                vServerIP = str(eServerIP.get())
                vServerPass = eServerPass.get()
                vLocalIP = eLocalIP.get()
                vDomain = eDomain.get()
                vWEB = eWeb.get()
                vSSH = eSSH.get()
                vSSHPort = eSSHPort.get()
                f = open('/etc/frp/frp-config/frpc.ini','w')
                f.write('[common]'+'\n')
                f.write('server_addr = '+vServerIP+'\n' )
                f.write('server_port = 7000'+'\n' )
                f.write('log_file = ./frpc.log'+'\n' )
                f.write('log_level = info'+'\n')
                f.write('log_max_days = 3 '+'\n')
                f.write('privilege_token = '+vServerPass+'\n')
                f.write('\n')
                f.write('['+vWEB+']'+'\n')
                f.write('privilege_mode = true '+'\n')
                f.write('type = http'+'\n')
                f.write('local_ip '+vLocalIP+'\n')
                f.write('local_port = 80'+'\n')
                f.write('custom_domains = '+vDomain+'\n')
                f.write('\n')
                f.write('['+vSSH+']'+'\n')
                f.write('privilege_mode = true '+'\n')
                f.write('type = tcp'+'\n')
                f.write('remote_port = '+vSSHPort+'\n')
                f.write('local_ip = '+vLocalIP+'\n')
                f.write('local_port = 22'+'\n')
                f.write('use_gzip = true use_encrypti'+'\n')
                f.close()
            configDia = Tk()
            configDia.title("配置")
            Label(configDia,text="服务器IP:").grid(row = 0)
            Label(configDia,text="服务器密码:").grid(row = 1)
            Label(configDia,text="本地IP:").grid(row = 2)
            Label(configDia,text="你的域名:").grid(row = 3)
            Label(configDia,text="WEB隧道:").grid(row = 4)
            Label(configDia,text="SSH隧道").grid(row = 5)
            Label(configDia,text="SSH转发端口:").grid(row = 6)
            eServerIP = Entry(configDia)
            eServerIP.grid(row = 0 ,column = 1 , padx = 10 , pady  = 5 )
            eServerPass = Entry(configDia)
            eServerPass.grid(row= 1 , column = 1 , padx = 10, pady = 5 )
            eLocalIP = Entry(configDia)
            eLocalIP.grid(row= 2 , column = 1 , padx = 10, pady = 5 )
            eDomain = Entry(configDia)
            eDomain.grid(row= 3 , column = 1 , padx = 10, pady = 5 )
            eWeb = Entry(configDia)
            eWeb.grid(row= 4 , column = 1 , padx = 10, pady = 5 )
            eSSH = Entry(configDia)
            eSSH.grid(row= 5 , column = 1 , padx = 10, pady = 5 )
            eSSHPort = Entry(configDia)
            eSSHPort.grid(row= 6 , column = 1 , padx = 10, pady = 5 )
            Button(configDia,text="保存",width = 10, command = save).grid(row=7,column = 1,sticky =W , padx =10 , pady = 5 )
    def appstatus(self):
            tMem=str('free -m | awk \' NR==2 {print "已使用:"$3"M  空闲:"$4"M"}\'')
            osStatus = os.popen('sudo /etc/init.d/frp status | tail -5 ')
            osMem = os.popen(tMem)
            osIP = os.popen("ip addr show eth0 | grep inet | awk -Finet '{print $2}' | awk 'NR==1 {print $1 }'  ")
            status = Tk()
            status.title("监控面板")
            status.geometry('880x250')
            label1 = Label(status,text="内存使用率:")
            label1.pack()
            label2 = Label(status,text=osMem.read())
            label2.pack()
            label3 = Label(status,text="IP地址:")
            label3.pack()
            label4 = Label(status,text=osIP.read())
            label4.pack()
            label5 = Label(status,text=osStatus.read())
            label5.pack()
    def appstart(self):
        osStart = os.system('nohup /etc/frp/frp-config/frpc -c /etc/frp/frp-config/frpc.ini >/dev/null 2>&1  &')
        start = Tk()
        start.title("启动FRP")
        start.geometry('200x30')
        label = Label(start,text='启动FRP!')
        label.pack()
    def appstop(self):
        os.system('bash /etc/init.d/frp stop')
        stop = Tk()
        stop.title("停止FRP")
        stop.geometry('200x30')
        label = Label(stop,text="停止FRP!")
        label.pack()
root = Tk()
app = app(root)
root.mainloop()
